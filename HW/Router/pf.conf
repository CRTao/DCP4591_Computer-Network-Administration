# $FreeBSD: releng/12.0/share/examples/pf/faq-example1 237681 2012-06-28 03:30:17Z rpaulo $
# $OpenBSD: faq-example1,v 1.5 2006/10/07 04:48:01 mcbride Exp $

#
# Firewall for Home or Small Office
# http://www.openbsd.org/faq/pf/example1.html
#
# /etc/pf.conf

#em0: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> metric 0 mtu 1500
#        options=81009b<RXCSUM,TXCSUM,VLAN_MTU,VLAN_HWTAGGING,VLAN_HWCSUM,VLAN_HWFILTER>
#        ether 08:00:27:ea:e8:48
#        inet 10.0.2.15 netmask 0xffffff00 broadcast 10.0.2.255
#        media: Ethernet autoselect (1000baseT <full-duplex>)
#        status: active
#        nd6 options=29<PERFORMNUD,IFDISABLED,AUTO_LINKLOCAL>
#em1: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> metric 0 mtu 1500
#        options=81009b<RXCSUM,TXCSUM,VLAN_MTU,VLAN_HWTAGGING,VLAN_HWCSUM,VLAN_HWFILTER>
#        ether 08:00:27:f6:26:1a
#        inet 10.113.29.254 netmask 0xffffff00 broadcast 10.113.29.255
#        media: Ethernet autoselect (1000baseT <full-duplex>)
#        status: active
#        nd6 options=29<PERFORMNUD,IFDISABLED,AUTO_LINKLOCAL>
#em2: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> metric 0 mtu 1500
#        options=81009b<RXCSUM,TXCSUM,VLAN_MTU,VLAN_HWTAGGING,VLAN_HWCSUM,VLAN_HWFILTER>
#        ether 08:00:27:37:57:d1
#        inet 192.168.56.102 netmask 0xffffff00 broadcast 192.168.56.255
#        media: Ethernet autoselect (1000baseT <full-duplex>)
#        status: active
#        nd6 options=29<PERFORMNUD,IFDISABLED,AUTO_LINKLOCAL>
#lo0: flags=8049<UP,LOOPBACK,RUNNING,MULTICAST> metric 0 mtu 16384
#        options=680003<RXCSUM,TXCSUM,LINKSTATE,RXCSUM_IPV6,TXCSUM_IPV6>
#        inet6 ::1 prefixlen 128
#        inet6 fe80::1%lo0 prefixlen 64 scopeid 0x4
#        inet 127.0.0.1 netmask 0xff000000
#        groups: lo
#        nd6 options=21<PERFORMNUD,AUTO_LINKLOCAL>
#pflog0: flags=141<UP,RUNNING,PROMISC> metric 0 mtu 33160
#        groups: pflog
#wg0: flags=8051<UP,POINTOPOINT,RUNNING,MULTICAST> metric 0 mtu 1420
#        options=80000<LINKSTATE>
#        inet 10.113.0.29 --> 10.113.0.29 netmask 0xffffff00
#        groups: tun
#        nd6 options=101<PERFORMNUD,NO_DAD>
#        Opened by PID 829

# macros
ext_if="em0"
int_if="em1"
wg0_if="wg0"
onl_if="em2"

tcp_services="{ 22, 25, 53, 80, 143, 161, 389, 636, 465, 5566}"
	      #ssh smtp dns http imap snmp ldap smtp(SSL) 
icmp_types="echoreq"

priv_nets = "{10.113.29.0/24}"

# options
set block-policy return
set loginterface $int_if
# em2 only allow VM-hostPC to access VM
set skip on em2  
set skip on lo

# scrub
scrub in all

# nat/rdr 
# NAT traffic from internal network to external network through external interface
nat on $ext_if from $int_if:network to any -> ($ext_if)

# RDR traffic from internal network to intranet network through intranet interface
rdr on $wg0_if from $int_if:network to any -> ($wg0_if)

# redirect FTP traffic to FTP proxy on localhost:8021
# requires ftp-proxy to be enabled in /etc/inetd.conf
rdr on $int_if proto tcp from any to any port 21 -> 127.0.0.1 port 8021

# filter rules
block all

# block incoming traffic from private networks on external interface
#block drop quick on $ext_if from $priv_nets to any

# block outgoing traffic to private networks on external interface
#block drop out quick on $ext_if from any to $priv_nets

# allow access to tcp_services on external interface
#pass in on $ext_if inet proto tcp from any to ($ext_if) port $tcp_services flags S/SA keep state

# allow ALL ping replies
pass inet proto icmp all icmp-type $icmp_types keep state

# allow all traffic from internal network to internal interface
pass in  on $int_if from $int_if:network to any keep state
pass out on $int_if from $int_if:network to any keep state

# allow all traffic out via external interface
pass out on $ext_if proto tcp all modulate state flags S/SA
pass out on $ext_if proto { udp, icmp } all keep state

# allow all traffic out via intranet interface
pass out on $wg0_if proto tcp all modulate state flags S/SA
pass out on $wg0_if proto { udp, icmp } all keep state

# allow ssh for all users to 10.113.29.129
pass inet proto tcp from any to 10.113.29.129 port $tcp_services flags S/SA keep state 
pass inet proto tcp from any to 10.113.29.99 port $tcp_services flags S/SA keep state
pass inet proto udp from any to 10.113.29.99 port $tcp_services keep state
pass inet proto tcp from any to 10.113.29.11 port $tcp_services flags S/SA keep state
pass inet proto udp from any to 10.113.29.11 port $tcp_services keep state
pass inet proto tcp from any to 10.113.29.12 port $tcp_services flags S/SA keep state
pass inet proto udp from any to 10.113.29.12 port $tcp_services keep state
pass inet proto {tcp, udp} from any to {10.113.29.1,10.113.29.2} port 53 keep state

